@startuml Manage CoworkingSpace (DELETE)

title "Manage CoworkingSpace (DELETE)"

actor "Admin" as client
participant "<<javaScript>>\nserver" as server
participant "<<routes>>\ncoworking" as routerCoworkingSpaces
participant "<<middleware>>\auth" as middleware
participant "<<controllers>>\ncoworkings" as controllersCoworkingSpaces
participant "<<model>>\nUser" as modelUser
participant "<<model>>\nCoworking" as modelCoworkingSpace
participant "<<model>>\nReservertion" as modelRe

database "<<MongoDB>>\nusers" as UsersDatabase
database "<<MongoDB>>\nreservations" as ReDatabase
database "<<MongoDB>>\ncoworkings" as CoworkingSpacesDatabase


== Delete Single CoworkingSpace ==

client->server ++:DELETE('/coworking/:id')
server->routerCoworkingSpaces ++:use('/coworkings/:id',coworking)
routerCoworkingSpaces -> middleware ++:protect(token)
middleware -> middleware ++:decodetoken
middleware -> modelUser ++:findById(decode.id)
modelUser -> UsersDatabase ++: UserSchema
modelUser <-- UsersDatabase --: User
middleware <-- modelUser --: User
routerCoworkingSpaces <-- middleware --: next()

routerCoworkingSpaces -> middleware ++:authorize(admin)
routerCoworkingSpaces <-- middleware --: next()

routerCoworkingSpaces -> controllersCoworkingSpaces ++:deleteCoworking()
controllersCoworkingSpaces -> modelCoworkingSpace ++:findByID(req.params.id)
modelCoworkingSpace -> CoworkingSpacesDatabase ++:CoworkingSchema
modelCoworkingSpace <-- CoworkingSpacesDatabase --:Coworking
controllersCoworkingSpaces <-- modelCoworkingSpace --:Coworking
controllersCoworkingSpaces -> modelCoworkingSpace ++:coworking.deleteOne()
modelCoworkingSpace -> modelCoworkingSpace ++:pre(deleteOne)
modelCoworkingSpace -> modelRe ++:deleteMany({coworking:this.id})
modelRe -> ReDatabase ++:ReservationSchema
modelRe <-- ReDatabase --:reservation
modelCoworkingSpace <-- modelRe --:reservation
modelCoworkingSpace -> modelCoworkingSpace --:next()
modelCoworkingSpace -> CoworkingSpacesDatabase ++:coworkingSchema
modelCoworkingSpace <-- CoworkingSpacesDatabase --:Coworking
controllersCoworkingSpaces <-- modelCoworkingSpace --:Coworking
client <-- controllersCoworkingSpaces --:response

@enduml